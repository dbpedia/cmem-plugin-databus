---
default:
  image: docker-registry.eccenca.com/eccenca-python:v3.9.16
  # all jobs can be interrupted in case a new commit is pushed
  interruptible: true
  before_script:
    # make sure poetry creates virtual environment as .venv
    - poetry config virtualenvs.in-project true
  cache:
    # cache the virtual environment based on the poetry lock file
    key:
      files:
        - poetry.lock
    paths:
      - .venv

stages:
  - test
  - build
  - publish

bandit:
  stage: test
  script:
    - task check:bandit
  artifacts:
    when: always
    reports:
      junit:
        - dist/junit-bandit.xml

flake8:
  stage: test
  script:
    - task check:flake8
  artifacts:
    when: always
    reports:
      junit:
        - dist/junit-flake8.xml

mypy:
  stage: test
  script:
    - task check:mypy
  artifacts:
    when: always
    reports:
      junit:
        - dist/junit-mypy.xml

pylint:
  stage: test
  script:
    - task check:pylint
  artifacts:
    when: always
    reports:
      junit:
        - dist/junit-pylint.xml

pytest:
  stage: test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  script:
    - task check:pytest
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: dist/coverage.xml
    paths:
      - dist/badge-coverage.svg
      - dist/badge-tests.svg
      - dist/coverage
      - dist/coverage.xml

safety:
  stage: test
  script:
    - task check:safety

build:
  stage: build
  needs:
    - bandit
    - mypy
    - pytest
    - safety
  script:
    - task build
  artifacts:
    when: always
    paths:
      - dist/*.tar.gz
      - dist/*.whl

pypi:
  # publishing only available on a tag
  stage: publish
  needs:
    - flake8
    - pylint
    - build
  allow_failure: true
  when: manual
  script:
    - poetry config pypi-token.pypi $PYPI_TOKEN
    - poetry publish

